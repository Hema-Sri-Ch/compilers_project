reserved keyword: func
datatype: int
Identifier : main
Special symbols:	(
Special symbols:	)
Special symbols:	{
reserved keyword: loop
reserved keyword: while
Special symbols:	(
Special symbols:	(
Identifier : i
reserved keyword: lt
constant: 10
Special symbols:	)
Special symbols:	)
Special symbols:	{
reserved keyword: expr
Identifier : m
Special symbols:	=
constant: 10
Punctuation : ;
Special symbols:	}
reserved keyword: loop
reserved keyword: while
Special symbols:	(
reserved keyword: decr
Special symbols:	(
Identifier : i
Special symbols:	)
Special symbols:	)
Special symbols:	{
reserved keyword: expr
Identifier : n
Special symbols:	=
constant: "hi"
Punctuation : ;
Special symbols:	}
reserved keyword: return
Identifier : i
Punctuation : ;
Special symbols:	}
reserved keyword: func
datatype: int
Identifier : main
Special symbols:	(
Special symbols:	)
Special symbols:	{
reserved keyword: loop
reserved keyword: for
Special symbols:	(
reserved keyword: expr
Identifier : i
Special symbols:	=
constant: 0
Punctuation : ;
Special symbols:	(
Identifier : i
reserved keyword: lt
constant: 10
Special symbols:	)
Punctuation : ;
reserved keyword: incr
Special symbols:	(
Identifier : i
Special symbols:	)
Special symbols:	)
Special symbols:	{
reserved keyword: expr
Identifier : m
Special symbols:	=
constant: 0
Punctuation : ;
Special symbols:	}
reserved keyword: return
Identifier : i
Punctuation : ;
Special symbols:	}
reserved keyword: struct
Identifier : node
Special symbols:	{
reserved keyword: declr
datatype: string
Identifier : name
Punctuation : ;
reserved keyword: declr
datatype: char
Identifier : grade
Punctuation : ;
reserved keyword: declr
datatype: int
Identifier : marks
Punctuation : ;
reserved keyword: declr
datatype: float
Identifier : cgpa
Punctuation : ;
reserved keyword: declr
datatype: bool
Identifier : feeStatus
Punctuation : ;
Special symbols:	}
Punctuation : ;
reserved keyword: class
Identifier : vehical
Special symbols:	{
reserved keyword: declr
datatype: string
Identifier : type
Punctuation : ;
reserved keyword: declr
datatype: int
Identifier : regNo
Punctuation : ;
reserved keyword: declr
datatype: bool
Identifier : pollutionCheck
Punctuation : ;
reserved keyword: func
datatype: int
Identifier : getRegNo
Special symbols:	(
Special symbols:	)
Special symbols:	{
reserved keyword: declr
datatype: int
Identifier : regNo
Punctuation : ;
Special symbols:	}
reserved keyword: func
datatype: void
Identifier : updatePollStatus
Special symbols:	(
datatype: bool
Identifier : val
Special symbols:	)
Special symbols:	{
reserved keyword: expr
Identifier : pollutionCheck
Special symbols:	=
Identifier : val
Punctuation : ;
reserved keyword: declr
datatype: int
Identifier : nuldl
Punctuation : ;
Special symbols:	}
Special symbols:	}
Punctuation : ;
reserved keyword: func
datatype: bool
Identifier : foo
Special symbols:	(
datatype: int
Identifier : a
Punctuation : ,
datatype: char
Identifier : b
Punctuation : ,
reserved keyword: vect
Special symbols:	<
datatype: int
Special symbols:	>
Identifier : sdf
Punctuation : ,
Identifier : node
Identifier : sdffd
Special symbols:	)
Special symbols:	{
reserved keyword: declr
reserved keyword: graph
Identifier : G
Special symbols:	[
constant: 4
Special symbols:	]
Punctuation : ;
reserved keyword: expr
Identifier : G
Special symbols:	=
Special symbols:	{
constant: 1
Punctuation : :
constant: 2
Punctuation : ,
constant: 3
Punctuation : ;
constant: 2
Punctuation : :
constant: 1
Punctuation : ,
constant: 4
Punctuation : ;
constant: 3
Punctuation : :
constant: 1
Punctuation : ;
constant: 4
Punctuation : :
constant: 2
Punctuation : ;
Special symbols:	}
Punctuation : ;
reserved keyword: declr
reserved keyword: graph
Identifier : G
Special symbols:	[
constant: 3
Special symbols:	]
Punctuation : ;
reserved keyword: expr
Identifier : G
Special symbols:	=
Special symbols:	{
constant: 1
Punctuation : :
Special symbols:	(
constant: 2
Punctuation : ,
constant: 8
Special symbols:	)
Punctuation : ,
Special symbols:	(
constant: 3
Punctuation : ,
constant: 12
Special symbols:	)
Punctuation : ;
constant: 2
Punctuation : :
Special symbols:	(
constant: 3
Punctuation : ,
constant: 5
Special symbols:	)
Punctuation : ;
Special symbols:	}
Punctuation : ;
reserved keyword: declr
reserved keyword: vect
Special symbols:	<
datatype: int
Special symbols:	>
Identifier : myvec
Punctuation : ;
reserved keyword: expr
Identifier : myvec
Special symbols:	=
Special symbols:	{
constant: 1
Punctuation : ,
constant: 2
Punctuation : ,
constant: 3
Special symbols:	}
Punctuation : ;
reserved keyword: expr
Identifier : myvec
Special symbols:	=
Special symbols:	{
constant: 1
Punctuation : ,
Identifier : bat
Punctuation : ,
constant: 3
Special symbols:	}
Punctuation : ;
reserved keyword: expr
Identifier : myvec
Special symbols:	=
Special symbols:	{
constant: 1
Punctuation : ,
Special symbols:	{
constant: 1
Punctuation : ,
Identifier : str
Punctuation : ,
Special symbols:	{
Special symbols:	}
Special symbols:	}
Punctuation : ,
constant: 3
Special symbols:	}
Punctuation : ;
reserved keyword: if
Special symbols:	(
Special symbols:	(
Identifier : a
reserved keyword: or
Identifier : b
Special symbols:	)
Special symbols:	)
Special symbols:	{
reserved keyword: call
Identifier : sdf
Special symbols:	(
Special symbols:	)
Punctuation : ;
reserved keyword: call
Identifier : sdfsd
Punctuation : .
Identifier : sdf
Special symbols:	(
Special symbols:	)
Punctuation : ;
reserved keyword: declr
datatype: int
Identifier : a
Punctuation : ;
reserved keyword: declr
datatype: float
Identifier : f1
Punctuation : ,
Identifier : f2
Punctuation : ;
Special symbols:	}
reserved keyword: else
Special symbols:	{
reserved keyword: declr
reserved keyword: vect
Special symbols:	<
datatype: int
Special symbols:	>
Identifier : myVec
Punctuation : ;
reserved keyword: declr
reserved keyword: graph
Identifier : G
Special symbols:	[
constant: 10
Special symbols:	]
Punctuation : ;
Special symbols:	}
reserved keyword: declr
reserved keyword: vect
Special symbols:	<
reserved keyword: vect
Special symbols:	<
datatype: int
Special symbols:	>
Special symbols:	>
Identifier : myvec
Punctuation : ;
reserved keyword: switch
Special symbols:	(
constant: 5
Special symbols:	)
Special symbols:	{
reserved keyword: case
constant: 1
Punctuation : :
Special symbols:	{
reserved keyword: declr
datatype: int
Identifier : arr
Special symbols:	[
constant: 10
Special symbols:	]
Punctuation : ;
reserved keyword: declr
datatype: int
Identifier : arr
Special symbols:	[
constant: 10
Special symbols:	]
Punctuation : ,
Identifier : barr
Special symbols:	[
constant: 5
Special symbols:	]
Punctuation : ;
Special symbols:	}
reserved keyword: case
constant: 2
Punctuation : :
Special symbols:	{
reserved keyword: expr
Identifier : adf
Special symbols:	=
operator: add
Special symbols:	(
Identifier : df
Punctuation : ,
operator: mul
Special symbols:	(
Identifier : a
Punctuation : ,
operator: div
Special symbols:	(
operator: sub
Special symbols:	(
Identifier : c
Punctuation : ,
Identifier : d
Special symbols:	)
Punctuation : ,
Identifier : f
Special symbols:	)
Special symbols:	)
Special symbols:	)
Punctuation : ;
reserved keyword: declr
datatype: string
Identifier : str1
Punctuation : ,
Identifier : str2
Punctuation : ;
Special symbols:	}
reserved keyword: default
Punctuation : :
Special symbols:	{
reserved keyword: declr
reserved keyword: vect
Special symbols:	<
datatype: int
Special symbols:	>
Identifier : myVec1
Punctuation : ,
Identifier : myVec2
Punctuation : ;
Special symbols:	}
Special symbols:	}
Special symbols:	}
