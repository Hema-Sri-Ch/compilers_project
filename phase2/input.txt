func int main()
{
	expr sd = (sd or difd);
	expr sd = (12 and add(12, incr(df)));
	expr d = add(call df(), call A.df(8, ddf, mul(a, b), (a or b), call dfas()));
	if((a or b))
	{
		call sdf();
		call sdfsd.sdf();
		declr int a;
		declr float f1, f2;
	}
	if(add(1,2))
	{
		expr a = b;
	}
	else
	{
		declr vect < int > myVec; 
		declr graph G[10];
	}

	switch((a or b))
	{
		case 1:
			declr int arr[10];
			declr int arr[10], barr[5];
		case 2:
			expr adf = add(df, mul(a, div(sub(c, d), f)));
			declr string str1, str2;
		default :
			declr vect<int> myVec1, myVec2;	
	}

	declr vect<int> myVec1, myVec2; 
	declr graph G[10], B[0];
	declr struct node A;
	declr struct node b, c;
	declr class node A;
	declr class node vertex1, vertex2;
}
