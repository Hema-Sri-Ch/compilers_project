reserved keyword: func
reserved keyword: vect
Special symbols:	<
datatype: int
Special symbols:	>
Identifier : foo
Special symbols:	(
reserved keyword: vect
Special symbols:	<
datatype: int
Special symbols:	>
Identifier : myVec
Special symbols:	)
Special symbols:	{
reserved keyword: declr
reserved keyword: vect
Special symbols:	<
datatype: int
Special symbols:	>
Identifier : v
Punctuation : ;
reserved keyword: declr
reserved keyword: vect
Special symbols:	<
datatype: string
Special symbols:	>
Identifier : v1
Punctuation : ;
reserved keyword: declr
datatype: int
Identifier : a
Punctuation : ,
Identifier : b
Punctuation : ,
Identifier : myInt
Punctuation : ;
reserved keyword: declr
datatype: bool
Identifier : myBool1
Punctuation : ,
Identifier : myBool2
Punctuation : ;
reserved keyword: declr
datatype: int
Identifier : ans
Punctuation : ;
reserved keyword: expr
Identifier : ans
Special symbols:	=
operator: add
Special symbols:	(
Identifier : a
Punctuation : ,
operator: sub
Special symbols:	(
Identifier : b
Punctuation : ,
operator: mul
Special symbols:	(
Identifier : myInt
Punctuation : ,
operator: exp
Special symbols:	(
constant: 10
Punctuation : ,
constant: 2
Special symbols:	)
Special symbols:	)
Special symbols:	)
Special symbols:	)
Punctuation : ;
reserved keyword: expr
Identifier : ans
Special symbols:	=
reserved keyword: not
Special symbols:	(
Special symbols:	(
Identifier : myBool1
reserved keyword: or
Special symbols:	(
Identifier : myBool2
reserved keyword: and
Special symbols:	(
Identifier : a
reserved keyword: lt
Identifier : b
Special symbols:	)
Special symbols:	)
Special symbols:	)
Special symbols:	)
Punctuation : ;
reserved keyword: expr
Identifier : v
Special symbols:	=
Identifier : v
Punctuation : .
Identifier: append
Special symbols:	(
constant: 4
Special symbols:	)
Punctuation : .
Identifier: append
Special symbols:	(
constant: 5
Special symbols:	)
Punctuation : .
Identifier: sort
Special symbols:	(
Special symbols:	)
Punctuation : ;
Identifier : v
Punctuation : .
Identifier: append
Special symbols:	(
operator: add
Special symbols:	(
Identifier : a
Punctuation : ,
constant: true
Special symbols:	)
Special symbols:	)
Punctuation : ;
reserved keyword: expr
Identifier : v
Special symbols:	=
Identifier : v
Punctuation : .
Identifier: remove
Special symbols:	(
constant: 0
Special symbols:	)
Punctuation : .
Identifier: remove
Special symbols:	(
constant: 0
Special symbols:	)
Punctuation : ;
reserved keyword: expr
Identifier : ans
Special symbols:	=
Identifier : v
Punctuation : .
Identifier: length
Special symbols:	(
Special symbols:	)
Punctuation : ;
reserved keyword: expr
Identifier : ans
Special symbols:	=
Identifier : v
Punctuation : .
Identifier: append
Special symbols:	(
constant: 4
Special symbols:	)
Punctuation : .
Identifier: append
Special symbols:	(
constant: 5
Special symbols:	)
Punctuation : .
Identifier: sort
Special symbols:	(
Special symbols:	)
Punctuation : .
Identifier: length
Special symbols:	(
Special symbols:	)
Punctuation : ;
Identifier : v
Punctuation : .
Identifier: sort
Special symbols:	(
Special symbols:	)
Punctuation : ;
Identifier : v
Punctuation : .
Identifier: append
Special symbols:	(
constant: 5
Special symbols:	)
Punctuation : .
Identifier: sort
Special symbols:	(
Special symbols:	)
Punctuation : ;
Identifier : v
Punctuation : .
Identifier: clear
Special symbols:	(
Special symbols:	)
Punctuation : ;
reserved keyword: return
Identifier : v
Punctuation : ;
Special symbols:	}
reserved keyword: func
reserved keyword: vect
Special symbols:	<
datatype: int
Special symbols:	>
Identifier : vectConcat
Special symbols:	(
Special symbols:	)
Special symbols:	{
reserved keyword: declr
reserved keyword: vect
Special symbols:	<
datatype: int
Special symbols:	>
Identifier : vecA
Punctuation : ,
Identifier : vecB
Punctuation : ;
reserved keyword: declr
datatype: int
Identifier : k
Punctuation : ,
Identifier : i
Punctuation : ,
Identifier : j
Punctuation : ;
reserved keyword: expr
Identifier : k
Special symbols:	=
Identifier : vecB
Punctuation : .
Identifier: length
Special symbols:	(
Special symbols:	)
Punctuation : ;
reserved keyword: loop
reserved keyword: for
Special symbols:	(
reserved keyword: expr
Identifier : i
Special symbols:	=
constant: 0
Punctuation : ;
Special symbols:	(
Identifier : i
reserved keyword: lt
Identifier : k
Special symbols:	)
Punctuation : ;
reserved keyword: incr
Special symbols:	(
Identifier : i
Special symbols:	)
Special symbols:	)
Special symbols:	{
Identifier : vecA
Punctuation : .
Identifier: append
Special symbols:	(
Identifier : vecB
Punctuation : .
Identifier: at
Special symbols:	(
Identifier : i
Special symbols:	)
Special symbols:	)
Punctuation : ;
reserved keyword: expr
Identifier : j
Special symbols:	=
Identifier : vecB
Punctuation : .
Identifier: at
Special symbols:	(
Identifier : i
Special symbols:	)
Punctuation : ;
Special symbols:	}
Identifier : vecA
Punctuation : .
Identifier: sort
Special symbols:	(
Special symbols:	)
Punctuation : ;
reserved keyword: return
Identifier : vecA
Punctuation : ;
Special symbols:	}
reserved keyword: struct
Identifier : myStructA
Special symbols:	{
reserved keyword: declr
datatype: int
Identifier : itemA
Punctuation : ;
reserved keyword: declr
datatype: string
Identifier : itemB
Punctuation : ;
Special symbols:	}
Punctuation : ;
reserved keyword: struct
Identifier : myStructB
Special symbols:	{
reserved keyword: declr
reserved keyword: graph
Identifier : G
Special symbols:	[
constant: 10
Special symbols:	]
Punctuation : ;
reserved keyword: declr
datatype: int
Identifier : itemC
Punctuation : ;
reserved keyword: declr
Identifier : myStructA
Identifier : itemD
Punctuation : ;
Special symbols:	}
Punctuation : ;
reserved keyword: class
Identifier : someClass
Special symbols:	{
reserved keyword: declr
reserved keyword: graph
Identifier : G1
Special symbols:	[
constant: 10
Special symbols:	]
Punctuation : ;
reserved keyword: declr
reserved keyword: matrix
Identifier : M
Special symbols:	[
constant: 2
Special symbols:	]
Special symbols:	[
constant: 3
Special symbols:	]
Punctuation : ;
reserved keyword: func
datatype: int
Identifier : foo
Special symbols:	(
Identifier : myStructA
Identifier : Hey
Punctuation : ,
datatype: string
Identifier : hey
Special symbols:	)
Special symbols:	{
reserved keyword: declr
reserved keyword: graph
Identifier : G
Special symbols:	[
constant: 10
Special symbols:	]
Punctuation : ;
reserved keyword: expr
Identifier : G
Special symbols:	=
Special symbols:	{
constant: 2
Punctuation : :
constant: 4
Punctuation : ,
constant: 5
Punctuation : ;
constant: 3
Punctuation : :
constant: 1
Punctuation : ;
constant: 3
Punctuation : :
constant: 2
Punctuation : ,
constant: 4
Punctuation : ;
Special symbols:	}
Punctuation : ;
reserved keyword: declr
reserved keyword: graph
Identifier : G2
Special symbols:	[
constant: 4
Special symbols:	]
Punctuation : ;
reserved keyword: expr
Identifier : G2
Special symbols:	=
Special symbols:	{
constant: 2
Punctuation : :
Special symbols:	(
constant: 1
Punctuation : ,
constant: 3
Special symbols:	)
Punctuation : ,
Special symbols:	(
constant: 4
Punctuation : ,
constant: 3.15
Special symbols:	)
Punctuation : ;
constant: 1
Punctuation : :
Special symbols:	(
constant: 2
Punctuation : ,
constant: 9
Special symbols:	)
Punctuation : ;
Special symbols:	}
Punctuation : ;
reserved keyword: declr
reserved keyword: vect
Special symbols:	<
datatype: int
Special symbols:	>
Identifier : gvv
Punctuation : ;
reserved keyword: expr
Identifier : gvv
Special symbols:	=
Identifier : G2
Punctuation : .
Identifier: bfs
Special symbols:	(
constant: 4
Special symbols:	)
Punctuation : ;
reserved keyword: expr
Identifier : M
Special symbols:	=
Special symbols:	[
Special symbols:	[
constant: 1
Punctuation : ,
constant: 3
Punctuation : ,
constant: 4
Special symbols:	]
Punctuation : ;
Special symbols:	[
constant: 1
Punctuation : ,
constant: 4
Punctuation : ,
constant: 5
Special symbols:	]
Punctuation : ;
Special symbols:	]
Punctuation : ;
reserved keyword: expr
Identifier : Hey
Special symbols: ->
Identifier : itemB
Special symbols:	=
Identifier : hey
Punctuation : ;
reserved keyword: declr
datatype: int
Identifier : k
Punctuation : ;
reserved keyword: return
Identifier : k
Punctuation : ;
Special symbols:	}
reserved keyword: func
reserved keyword: matrix
Identifier : boo
Special symbols:	(
Special symbols:	)
Special symbols:	{
reserved keyword: declr
datatype: int
Identifier : k
Punctuation : ;
reserved keyword: return
Identifier : M
Punctuation : ;
Special symbols:	}
Special symbols:	}
Punctuation : ;
reserved keyword: class
Identifier : myClass
Special symbols:	{
reserved keyword: declr
datatype: int
Identifier : cItemA
Punctuation : ;
reserved keyword: declr
Identifier : myStructB
Identifier : cItemB
Punctuation : ;
reserved keyword: declr
Identifier : someClass
Identifier : cItemC
Punctuation : ;
reserved keyword: func
datatype: int
Identifier : foo
Special symbols:	(
Identifier : myStructA
Identifier : Hey
Punctuation : ,
datatype: string
Identifier : hey
Special symbols:	)
Special symbols:	{
reserved keyword: expr
Identifier : Hey
Special symbols: ->
Identifier : itemB
Special symbols:	=
Identifier : hey
Punctuation : ;
reserved keyword: declr
datatype: int
Identifier : k
Punctuation : ;
reserved keyword: return
Identifier : k
Punctuation : ;
Special symbols:	}
reserved keyword: func
datatype: int
Identifier : boo
Special symbols:	(
Identifier : myStructB
Identifier : yo
Special symbols:	)
Special symbols:	{
reserved keyword: expr
Identifier : cItemB
Special symbols:	=
Identifier : yo
Punctuation : ;
reserved keyword: return
Identifier : yo
Special symbols: ->
Identifier : itemC
Punctuation : ;
reserved keyword: return
constant: 10
Punctuation : ;
Special symbols:	}
reserved keyword: func
datatype: int
Identifier : myFunc
Special symbols:	(
datatype: int
Identifier : abc
Punctuation : ,
datatype: int
Identifier : k
Punctuation : ,
datatype: string
Identifier : str
Punctuation : ,
datatype: char
Identifier : c
Special symbols:	)
Special symbols:	{
reserved keyword: declr
datatype: int
Identifier : a
Punctuation : ,
Identifier : b
Punctuation : ;
reserved keyword: declr
Identifier : myStructB
Identifier : myObj
Punctuation : ;
reserved keyword: expr
Identifier : myObj
Special symbols:	=
Identifier : cItemB
Punctuation : ;
reserved keyword: expr
Identifier : cItemB
Special symbols: ->
Identifier : itemD
Special symbols: ->
Identifier : itemA
Special symbols:	=
constant: 10
Punctuation : ;
reserved keyword: declr
datatype: int
Identifier : dslkf
Punctuation : ;
reserved keyword: expr
Identifier : abc
Special symbols:	=
constant: 10
Punctuation : ;
reserved keyword: expr
Identifier : str
Special symbols:	=
constant: "c"
Punctuation : ;
reserved keyword: expr
Identifier : c
Special symbols:	=
constant: 'c'
Punctuation : ;
Identifier : label3
Punctuation : :
Special symbols:	{
reserved keyword: expr
Identifier : c
Special symbols:	=
constant: 'l'
Punctuation : ;
Special symbols:	}
reserved keyword: declr
datatype: int
Identifier : i0
Punctuation : ,
Identifier : i1
Punctuation : ;
reserved keyword: expr
Identifier : a
Special symbols:	=
constant: 10
Punctuation : ;
reserved keyword: switch
Special symbols:	(
operator: add
Special symbols:	(
Identifier : a
Punctuation : ,
Identifier : b
Special symbols:	)
Special symbols:	)
Special symbols:	{
reserved keyword: case
constant: 1
Punctuation : :
Special symbols:	{
Special symbols:	}
reserved keyword: case
constant: 2
Punctuation : :
Special symbols:	{
reserved keyword: switch
Special symbols:	(
operator: add
Special symbols:	(
Identifier : a
Punctuation : ,
Identifier : b
Special symbols:	)
Special symbols:	)
Special symbols:	{
reserved keyword: case
constant: 1
Punctuation : :
Special symbols:	{
Special symbols:	}
reserved keyword: case
constant: 2
Punctuation : :
Special symbols:	{
Special symbols:	}
reserved keyword: case
constant: 3
Punctuation : :
Special symbols:	{
Special symbols:	}
reserved keyword: default
Punctuation : :
Special symbols:	{
Special symbols:	}
Special symbols:	}
Special symbols:	}
reserved keyword: case
constant: 3
Punctuation : :
Special symbols:	{
Special symbols:	}
reserved keyword: default
Punctuation : :
Special symbols:	{
Special symbols:	}
Special symbols:	}
reserved keyword: declr
reserved keyword: matrix
Identifier : A
Special symbols:	[
constant: 2
Special symbols:	]
Special symbols:	[
constant: 2
Special symbols:	]
Punctuation : ,
Identifier : B
Special symbols:	[
constant: 2
Special symbols:	]
Special symbols:	[
constant: 2
Special symbols:	]
Punctuation : ,
Identifier : C
Special symbols:	[
constant: 2
Special symbols:	]
Special symbols:	[
constant: 2
Special symbols:	]
Punctuation : ;
reserved keyword: return
reserved keyword: add_matx
Special symbols:	(
Identifier : A
Punctuation : ,
Identifier : B
Special symbols:	)
Punctuation : .
Identifier: trace
Special symbols:	(
Special symbols:	)
Punctuation : ;
reserved keyword: expr
Identifier : C
Special symbols:	=
reserved keyword: add_matx
Special symbols:	(
Identifier : A
Punctuation : ,
Identifier : B
Special symbols:	)
Punctuation : ;
reserved keyword: return
constant: 1
Punctuation : ;
Special symbols:	}
Special symbols:	}
Punctuation : ;
reserved keyword: func
datatype: string
Identifier : getStr
Special symbols:	(
Special symbols:	)
Special symbols:	{
reserved keyword: return
constant: "Hello, World!\n"
Punctuation : ;
Special symbols:	}
reserved keyword: func
datatype: int
Identifier : main
Special symbols:	(
Identifier : myClass
Identifier : obj
Punctuation : ,
datatype: float
Identifier : b
Punctuation : ,
datatype: char
Identifier : c
Punctuation : ,
datatype: string
Identifier : str
Punctuation : ,
datatype: int
Identifier : myArr
Special symbols:	[
Special symbols:	]
Special symbols:	)
Special symbols:	{
reserved keyword: declr
datatype: string
Identifier : str1
Punctuation : ,
Identifier : str2
Punctuation : ,
Identifier : str3
Punctuation : ;
reserved keyword: declr
datatype: int
Identifier : len
Punctuation : ;
reserved keyword: expr
Identifier : str3
Special symbols:	=
reserved keyword: call
Identifier : getStr
Special symbols:	(
Special symbols:	)
Punctuation : ;
reserved keyword: expr
Identifier : len
Special symbols:	=
reserved keyword: call
Identifier : getStr
Special symbols:	(
Special symbols:	)
Punctuation : .
Identifier: strlen
Special symbols:	(
Special symbols:	)
Punctuation : ;
reserved keyword: expr
Identifier : len
Special symbols:	=
Identifier : str1
Punctuation : .
Identifier: strlen
Special symbols:	(
Special symbols:	)
Punctuation : ;
reserved keyword: declr
reserved keyword: vect
Special symbols:	<
datatype: int
Special symbols:	>
Identifier : myVec
Punctuation : ;
reserved keyword: expr
Identifier : myVec
Special symbols:	=
Special symbols:	{
constant: 1
Punctuation : ,
constant: 2
Punctuation : ,
constant: 3
Punctuation : ,
constant: 4
Punctuation : ,
constant: 5
Special symbols:	}
Punctuation : ;
reserved keyword: expr
Identifier : len
Special symbols:	=
Identifier: strcmp
Special symbols:	(
Identifier : str1
Punctuation : ,
reserved keyword: call
Identifier : getStr
Special symbols:	(
Special symbols:	)
Special symbols:	)
Punctuation : ;
reserved keyword: expr
Identifier : str1
Special symbols:	=
Identifier: strjoin
Special symbols:	(
Identifier : str2
Punctuation : .
Identifier: strcut
Special symbols:	(
constant: 0
Punctuation : ,
constant: 5
Special symbols:	)
Punctuation : ,
Identifier: strjoin
Special symbols:	(
Identifier : str3
Punctuation : ,
reserved keyword: call
Identifier : getStr
Special symbols:	(
Special symbols:	)
Special symbols:	)
Special symbols:	)
Punctuation : ;
reserved keyword: declr
datatype: int
Identifier : a
Punctuation : ;
reserved keyword: declr
datatype: int
Identifier : arr
Special symbols:	[
constant: 3
Special symbols:	]
Punctuation : ;
reserved keyword: expr
Identifier : arr
Special symbols:	=
Special symbols:	[
constant: 1
Punctuation : ,
constant: 2
Punctuation : ,
constant: 3
Special symbols:	]
Punctuation : ;
comment: !!	expr myArr = [1, 2, 3];!!
reserved keyword: declr
reserved keyword: matrix
Identifier : M1
Special symbols:	[
constant: 2
Special symbols:	]
Special symbols:	[
constant: 3
Special symbols:	]
Punctuation : ,
Identifier : M2
Special symbols:	[
constant: 2
Special symbols:	]
Special symbols:	[
constant: 3
Special symbols:	]
Punctuation : ;
reserved keyword: expr
Identifier : M1
Special symbols:	=
Special symbols:	[
Special symbols:	[
constant: 1
Punctuation : ,
constant: 2
Punctuation : ,
constant: 3
Special symbols:	]
Punctuation : ;
Special symbols:	[
constant: 1.0
Punctuation : ,
constant: 2.0
Punctuation : ,
constant: 3.0
Special symbols:	]
Punctuation : ;
Special symbols:	]
Punctuation : ;
reserved keyword: expr
Identifier : M2
Special symbols:	=
Special symbols:	[
Special symbols:	[
constant: 4
Punctuation : ,
constant: 5
Punctuation : ,
constant: 6
Special symbols:	]
Punctuation : ;
Special symbols:	[
constant: 1.0
Punctuation : ,
constant: 2.0
Punctuation : ,
constant: 3.0
Special symbols:	]
Punctuation : ;
Special symbols:	]
Punctuation : ;
reserved keyword: declr
reserved keyword: matrix
Identifier : M3
Special symbols:	[
constant: 2
Special symbols:	]
Special symbols:	[
constant: 3
Special symbols:	]
Punctuation : ;
reserved keyword: expr
Identifier : M3
Special symbols:	=
reserved keyword: add_matx
Special symbols:	(
Identifier : M1
Punctuation : ,
Identifier : M2
Special symbols:	)
Punctuation : ;
reserved keyword: expr
Identifier : M3
Special symbols:	=
reserved keyword: add_matx
Special symbols:	(
reserved keyword: add_matx
Special symbols:	(
Identifier : M1
Punctuation : ,
Identifier : M2
Special symbols:	)
Punctuation : ,
reserved keyword: mult_matx
Special symbols:	(
Identifier : M1
Punctuation : ,
Identifier : M2
Special symbols:	)
Special symbols:	)
Punctuation : .
Identifier: transpose
Special symbols:	(
Special symbols:	)
Punctuation : ;
reserved keyword: expr
Identifier : a
Special symbols:	=
reserved keyword: add_matx
Special symbols:	(
reserved keyword: add_matx
Special symbols:	(
Identifier : M1
Punctuation : ,
Identifier : M2
Special symbols:	)
Punctuation : ,
reserved keyword: mult_matx
Special symbols:	(
Identifier : M1
Punctuation : ,
Identifier : M2
Special symbols:	)
Special symbols:	)
Punctuation : .
Identifier: trace
Special symbols:	(
Special symbols:	)
Punctuation : ;
reserved keyword: return
constant: 0
Punctuation : ;
Special symbols:	}
