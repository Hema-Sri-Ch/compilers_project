reserved keyword: class
Identifier : myClass
Special symbols:	{
reserved keyword: func
datatype: int
Identifier : myFunc
Special symbols:	(
datatype: int
Identifier : abc
Special symbols:	)
Special symbols:	{
reserved keyword: expr
Identifier : abc
Special symbols:	=
constant: 10
Punctuation : ;
reserved keyword: return
Identifier : abc
Punctuation : ;
Special symbols:	}
Special symbols:	}
Punctuation : ;
reserved keyword: func
datatype: int
Identifier : main
Special symbols:	(
datatype: int
Identifier : a
Punctuation : ,
datatype: float
Identifier : b
Punctuation : ,
datatype: char
Identifier : c
Punctuation : ,
datatype: string
Identifier : str
Punctuation : ,
Identifier : myClass
Identifier : obj
Special symbols:	)
Special symbols:	{
reserved keyword: expr
Identifier : a
Special symbols:	=
constant: 10
Punctuation : ;
reserved keyword: expr
Identifier : str
Special symbols:	=
constant: "Hello, world"
Punctuation : ;
reserved keyword: expr
Identifier : a
Special symbols:	=
operator: add
Special symbols:	(
Identifier : a
Punctuation : ,
Identifier : b
Special symbols:	)
Punctuation : ;
reserved keyword: return
reserved keyword: call
Identifier : obj
Special symbols: ->
Identifier : myFunc
Special symbols:	(
constant: 5
Special symbols:	)
Punctuation : ;
Special symbols:	}
invalid statement in lexer